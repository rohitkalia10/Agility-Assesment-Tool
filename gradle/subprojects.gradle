subprojects {
    apply plugin: 'java'
    if (!project.name.equals('webapp')) {
    apply plugin: "io.spring.dependency-management"
//    dependencyManagement {
//      imports {
//        // https://github.com/spring-projects/spring-boot/blob/master/spring-boot-dependencies/pom.xml
////        mavenBom("org.springframework.boot:spring-boot-dependencies:2.1.2.RELEASE")
//          mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
//      }
//    }
    dependencies {
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.springframework.boot:spring-boot-starter-actuator')
        compile ("org.springframework.boot:spring-boot-starter-data-jpa")
        compile("com.h2database:h2")
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }
  }

    jar {
        manifest {
            attributes("Implementation-Title": "AgilityAssesmentTool",
                    "Implementation-Version": "${project.version}")
        }
    }

    tasks.addRule("Pattern: listPaths<ConfigurationName>: Prints files in the specified classpath/confoguration.") {
        String taskName ->
            if(taskName.startsWith("listPaths")){
                task(taskName){
                    doLast {
                        def config = taskName.replace("listPaths", "")
                        config = config.replaceFirst(config[0], config[0].toLowerCase());
                        project.configurations[config].collect{it.toURI()}.sort().each{println it}
                    }
                }
            }
    }
}