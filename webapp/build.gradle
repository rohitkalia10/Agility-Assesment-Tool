import java.time.format.DateTimeFormatter
import java.time.ZonedDateTime

apply plugin: 'org.springframework.boot'
apply plugin: 'war'


description 'Spring boot application'

springBoot {
    mainClassName = 'agility.lifecyle.AgilityApplication'
}

bootRun {
    systemProperties = System.properties
    main = 'agility.lifecyle.AgilityApplication'
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile project(':app')
    compile project(':api')
    compile project(':domain')
    compile project(':data')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

task createCheckpointFile {
    doLast {
        def checkpoint = "AgilityTool-${project.version}"
        println "Checkpoint = ${checkpoint}"
        def TODAY_DT_US = ZonedDateTime.now().format(DateTimeFormatter.ofPattern("MM-dd-yy hh:mm:ss a z"))
        String fileContent = "BUILD_CHECKPOINT: ${checkpoint}\nBUILD TSTAMP: ${TODAY_DT_US} \nBUILD_DTR: ${projectDir}"
        new File("${buildDir}/agility.checkpoint").write(fileContent)
    }
}

jar {
    from file("${buildDir}/springbootagility.checkpoint")
    baseName = "agility"
    manifest {
        attributes("Implementation-Title": "AgilityTool",
            "Implementation-Version": "${project.version}")
    }
}

jar.dependsOn createCheckpointFile

/*

war {
    from file("${buildDir}/springbootmicroservicetemplate.checkpoint")
    baseName = "springbootmicroservicetemplate"
    manifest {
        attributes("Implementation-Title": "AgilityTool",
                "Implementation-Version": "${project.version}")
    }
}

war.dependsOn jar */